#!/bin/sh 

set -e

cur_dir=$PWD
cur_path=$(readlink -f $0)
cur_workdir=${cur_path%/*}

build_dir=$cur_dir/build
pkg_dir=$cur_dir/pkg
pkg_suffix=tar.zst

mkdir -p $build_dir $pkg_dir

build_pkg()
{
    pkgname=$1

    pkg_path=$(find $pkg_dir -name "${pkgname}*pkg.${pkg_suffix}")
    if [ -e "$pkg_path" ];then
        echo "$pkg_path is exists."
        return
    fi

    cd $build_dir

    export GOPROXY=https://goproxy.cn

    if [ "${pkgname:(-8)}" = "PKGBUILD" ];then
        wget $pkgname
        pkgname=$(awk -F= '/pkgname=/{print $2}' PKGBUILD)
        # pacman -Qq $pkgname > /dev/null 2>&1 && exit
    else
        if [ ! -d ${pkgname} ];then
            # pacman -Qq $pkgname > /dev/null 2>&1 && exit
            # wget http://aur.archlinux.org/packages/${pkgname:0:2}/${pkgname}/${pkgname}.tar.gz
            wget -c https://aur.archlinux.org/cgit/aur.git/snapshot/${pkgname}.tar.gz
            tar xvf ${pkgname}.tar.gz
        fi
        cd ${pkgname}
    fi

    makepkg --noconfirm -sf
    # makepkg --noconfirm -si $2
    rm -fv $pkg_dir/${pkgname}*pkg.${pkg_suffix}
    cp -fv ${pkgname}*pkg.${pkg_suffix} $pkg_dir/
}

update_custom_repo()
{
    repo_dir=/work/cache/pacman/repo
    if [ ! -d $repo_dir ];then
        sudo mkdir -p $repo_dir
    fi
    sudo rm -fv $repo_dir/*
    sudo cp -fv $pkg_dir/*.${pkg_suffix} $repo_dir/
    sudo repo-add $repo_dir/custom.db.tar.gz $repo_dir/*.pkg.${pkg_suffix}
}

clean()
{
    rm -rf build pkg
}

build_all()
{
    # build_pkg clipit
    build_pkg cgvg
    #build_pkg apparix
    #build_pkg zeal-git
    build_pkg ttf-vlgothic
    #build_pkg package-query
    #build_pkg yaourt
    #build_pkg visual-studio-code-bin
    build_pkg ta-lib
    #build_pkg mysql-utilities
    #build_pkg grc
    # build_pkg redis-desktop-manager
    # build_pkg google-chrome
    # build_pkg plantuml
}

clean_pkg()
{
    for pkg in $@; do
        rm pkg/$pkg*
        rm -rfv build/$pkg*
    done
}

case $1 in
    b|build)
        build_all
        update_custom_repo
        ;;
    u|update)
        update_custom_repo
        ;;
    c|clean)
        shift
        clean_pkg $@
        ;;
    *)
        #build_pkg yaourt
        #build_pkg package-query
        build_pkg yay
        #build_pkg nbfc-git
        # build_pkg clipit
        # build_all
        # build_pkg qemu-git
        #build_pkg visual-studio-code
        # build_pkg nvidia-docker
        # build_pkg plantuml
        # build_pkg redis-desktop-manager
        #build_pkg yaourt
        #build_pkg msbuild-stable
        #build_pkg fsharp
        #build_pkg monodevelop-stable
        #build_pkg mysql-utilities
        update_custom_repo
        ;;
esac
